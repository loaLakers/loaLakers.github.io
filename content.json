[{"title":"Nginx搭建https服务器","date":"2017-07-28T05:55:00.000Z","path":"2017/07/28/android-2017-0728-1355/","text":"开发需要搭建https环境，自建证书，采用Nginx搭建。 开发环境Ubuntu:16.04.2java:1.8.0_111nginx:1.12.0OpenSSL:1.0.2g 生成证书 进入Nginx配置目录1cd /usr/local/nginx/conf/ 设置server.key 1openssl genrsa -des3 -out server.key 1024 参数设置 1openssl req -new -key server.key -out server.csr 写RSA秘钥 1openssl rsa -in server.key -out server_nopwd.key 获取私钥 1openssl x509 -req -days 365 -in server.csr -signkey server_nopwd.key -out server.crt 完成之后会在当前目录中生成server.crt、server.csr、server.key和server_nopwd.key四个文件。 配置Nginx编辑nginx.conf文件。1234567891011121314151617181920server &#123; listen 443; ssl on; #server_name localhost; ssl_certificate /usr/local/nginx/conf/server.crt; ssl_certificate_key /usr/local/nginx/conf/server_nopwd.key; ssl_session_cache shared:SSL:1m; ssl_session_timeout 5m; ssl_ciphers HIGH:!aNULL:!MD5; ssl_prefer_server_ciphers on; location / &#123; #root html; #index index.html index.htm; proxy_pass http://localhost:7009/; &#125; &#125; ssl_certificate和ssl_certificate_key配置刚才生成的文件路径。 proxy_pass是将https的请求转到http://localhost:7009/。 浏览器测试首先测试http访问，即上面的7009端口访问。 换成https访问 Android端访问证书使用上述生成的自签名的服务器证书server.crt生成对应的bks证书文件。 要生成bks证书，需要bcprov-ext-jdk15on-157.jar（下载地址），且将该文件放到/jdk1.8.0_111/jre/lib/ext目录下。 使用下面命令 1keytool -genkeypair -ext SAN=IP:47.93.253.45 -importcert -trustcacerts -alias macnginx -keystore /usr/local/nginx/conf/nginx.bks -file /usr/local/nginx/conf/server.crt -storetype BKS -provider org.bouncycastle.jce.provider.BouncyCastleProvider 这样在当前目录会生成nginx.bks文件。 Android测试 将nginx.bks文件放在res/raw/目录下。 https证书校验代码 OkHttpClient设置 界面展示代码 —— END. loaLakers on 07.28","tags":[{"name":"Nginx","slug":"Nginx","permalink":"http://yoursite.com/tags/Nginx/"}]},{"title":"Android使用Jenkins实现自动化打包","date":"2017-07-22T00:53:00.000Z","path":"2017/07/22/android-2017-0722-0853/","text":"Android项目开发过程中，每次测试打包都会浪费较长的时间，为了能节省时间、将精力更多的放在代码编写上，可利用Jenkins工具进行自动化构建打包，当仓库中的代码有变化时，自动构建打包，节省时间也是迈出开发自动化的第一步。 开发环境Mac OS:10.11.6Android Studio:2.3.3adb:1.0.36gradle:3.5jenkins:2.70 运行JenkinsJenkins安装完成之后，直接命令行中运行jenkins命令即可，运行成功之后在浏览器中输入http://localhost:8080/。 配置Jenkins插件第一次运行会提示安装插件，选择推荐安装即可。 安装完成之后，提示设置用户名、密码等信息。 除了推荐安装的插件之外，Android实现自动构建还需要另外一个插件Android Lint，需要手动安装。系统设置—插件管理，搜索安装即可。 设置sdk路径系统管理—系统设置—全局属性，新建属性，输入key值和value值，其中key值必须为ANDROID_HOME。 新建项目在此之前，需要在github上或者内网git仓库新建项目，此例中使用github。地址：https://github.com/loaLakers/HelloWorld.git。 在源码管理中配置git仓库地址及密码等验证信息。 立即构建点击立即构建，会在本地生成构建成功的项目文件。 文件目录地址可在系统配置-主目录中查看 gradle编译配置Android项目需要打包还需要配置gradle，点击MyView-helloworld进入项目详情，点击配置，在构建模块设置。 打包再次点击立即构建，会在本地的目录下生成APK文件。 签名打包之前的打包是没有签名的，需要在工程的build.gradle中设置签名来自动签名打包。 将代码提交到github后，再次点击立即构建，可在相同的目录下生成已经签名的APK文件，并且名称按照设置规定的形式。 自动定时检测打包Jenkins可以设置定时检查git仓库是否有更新，如有更新自动构建打包，实现自动化。点击MyView，点击helloworld项目，点击配置，在构建触发器模块设置。 gradle.build配置代码1signingConfigs &#123;//签名的配置 release &#123; storeFile file(&quot;test.jks&quot;) storePassword &apos;123456&apos; keyAlias &apos;test&apos; keyPassword &apos;123456&apos; &#125; &#125; applicationVariants.all &#123; variant -&gt; if (variant.buildType.name == &apos;release&apos;) &#123; variant.outputs.each &#123; output -&gt; def outputFile = output.outputFile if (outputFile != null &amp;&amp; outputFile.name.endsWith(&apos;.apk&apos;)) &#123; def fileName = &quot;$&#123;releaseTime()&#125;_com.wzh_helloworld_$&#123;defaultConfig.versionName&#125;.apk&quot; output.outputFile = new File(outputFile.parent, fileName) &#125; &#125; &#125; &#125; signingConfig signingConfigs.release applicationVariants.all &#123; variant -&gt; if (variant.buildType.name == &apos;release&apos;) &#123; variant.outputs.each &#123; output -&gt; def outputFile = output.outputFile if (outputFile != null &amp;&amp; outputFile.name.endsWith(&apos;.apk&apos;)) &#123; def fileName = &quot;$&#123;releaseTime()&#125;_com.wzh_helloworld_$&#123;defaultConfig.versionName&#125;.apk&quot; output.outputFile = new File(outputFile.parent, fileName) &#125; &#125; &#125; &#125; lintOptions &#123; abortOnError false &#125; def releaseTime() &#123; return new Date().format(&quot;yyyy-MM-dd-HH:mm:ss&quot;, TimeZone.getTimeZone(&quot;Asia/Chongqing&quot;)) &#125; —— END. loaLakers on 07.22","tags":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/tags/Android/"}]},{"title":"oracle数据库监控","date":"2017-07-20T03:06:00.000Z","path":"2017/07/20/database-2017-0720-1106/","text":"基于jdbc,简易oracle监控。 —— END. loaLakers on 07.20","tags":[{"name":"Database","slug":"Database","permalink":"http://yoursite.com/tags/Database/"}]},{"title":"早游校园","date":"2017-07-10T23:46:00.000Z","path":"2017/07/11/other-2017-0711-0746/","text":"今天高温，早起带小子宁出去溜达溜达，小家伙挺高兴。 妈妈和宝宝 一家三口 —— END. loaLakers on 07.11","tags":[{"name":"Other","slug":"Other","permalink":"http://yoursite.com/tags/Other/"}]},{"title":"寄生活费的父亲","date":"2017-07-10T04:00:00.000Z","path":"2017/07/10/other-2017-0710-1200/","text":"在银行，看到一位父亲，将零钱叠在一起，满手操劳的手茧。 “这是存钱吗？”“给读大学的儿子寄生活费。” –来自今日头条。 —— END. loaLakers on 07.10","tags":[{"name":"Other","slug":"Other","permalink":"http://yoursite.com/tags/Other/"}]},{"title":"PHP-表格数据","date":"2017-07-10T01:36:00.000Z","path":"2017/07/10/php-2017-0710-0950/","text":"之前都是使用jsp来写动态页面。刚刚接触PHP。主要是如上所示的图标展示，从数据库获取数据展示。 表格控件使用的是sChart。 数据库链接1234567891011&lt;?php$host=&quot;*.*.*.*&quot;;$db_user=&quot;root&quot;;$db_pass=&quot;root&quot;;$db_name=&quot;ubuntu&quot;;$timezone=&quot;Asia/Shanghai&quot;;$link=mysql_connect($host,$db_user,$db_pass);mysql_select_db($db_name,$link);mysql_query(&quot;SET names UTF8&quot;);?&gt; 数据获取1234567891011121314151617181920212223&lt;?php include_once(&apos;connect.php&apos;); $res = mysql_query(&quot;select * from chart_pie where type = &apos;8&apos;&quot;); while($row = mysql_fetch_array($res))&#123; $arr[] = array( &quot;name&quot; =&gt; $row[&apos;title&apos;], &quot;value&quot; =&gt; intval($row[&apos;pv&apos;]) ); &#125; $res2 = mysql_query(&quot;select * from chart_pie where type = &apos;9&apos;&quot;); while($row2 = mysql_fetch_array($res2))&#123; $arr2[] = array( &quot;name&quot; =&gt; $row2[&apos;title&apos;], &quot;value&quot; =&gt; intval($row2[&apos;pv&apos;]) ); &#125; $data = json_encode($arr); $data2 = json_encode($arr2); //echo $data;?&gt; 页面展示12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;title&gt;手机税税通申报情况&lt;/title&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, user-scalable=no&quot;&gt; &lt;style&gt; .main&#123; padding: 0px; text-align: center; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;h2 align=&apos;center&apos;&gt;手机税税通申报情况&lt;/h2&gt; &lt;div class=&quot;main&quot;&gt; &lt;canvas id=&quot;canvas0&quot; width=&quot;1304&quot; height=&quot;350&quot;&gt;&lt;/canvas&gt; &lt;canvas id=&quot;canvas1&quot; width=&quot;650&quot; height=&quot;320&quot;&gt;&lt;/canvas&gt; &lt;canvas id=&quot;canvas2&quot; width=&quot;650&quot; height=&quot;320&quot;&gt;&lt;/canvas&gt; &lt;/div&gt; &lt;script src=&quot;sChart.min.js&quot;&gt;&lt;/script&gt; &lt;script&gt; var data1 = &lt;?php echo $data;?&gt;; var data2 = &lt;?php echo $data2;?&gt;; new sChart(&apos;canvas0&apos;, &apos;line&apos;, data1, &#123; title: &apos;手机税税通7月份申报情况-分区市&apos;, bgColor: &apos;#829dda&apos;, titleColor: &apos;#ffffff&apos;, fillColor: &apos;#72f6ff&apos;, axisColor: &apos;#eeeeee&apos;, contentColor: &apos;#bbbbbb&apos; &#125;); new sChart(&apos;canvas1&apos;, &apos;bar&apos;, data1, &#123; title: &apos;手机税税通7月份申报情况-分区市&apos;, bgColor: &apos;#829dda&apos;, titleColor: &apos;#ffffff&apos;, fillColor: &apos;#72f6ff&apos;, axisColor: &apos;#eeeeee&apos;, contentColor: &apos;#bbbbbb&apos; &#125;); new sChart(&apos;canvas2&apos;, &apos;pie&apos;, data2, &#123; title: &apos;手机税税通7月份申报情况-客户端&apos;, bgColor: &apos;#829dda&apos;, titleColor: &apos;#ffffff&apos;, legendColor: &apos;#ffffff&apos; &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; —— END. loaLakers on 07.10","tags":[{"name":"PHP","slug":"PHP","permalink":"http://yoursite.com/tags/PHP/"}]}]